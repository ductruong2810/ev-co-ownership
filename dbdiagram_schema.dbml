// EV Co-ownership Database Schema for dbdiagram.io
// Copy this code and paste into https://dbdiagram.io

Table Roles {
  RoleId bigint [pk, increment]
  RoleName varchar(30) [unique, not null]
}

Table Users {
  UserId bigint [pk, increment]
  FullName varchar(100) [not null]
  Email varchar(100) [unique, not null]
  PasswordHash varchar(255) [not null]
  PhoneNumber varchar(20)
  AvatarUrl varchar(500)
  RoleId bigint [ref: > Roles.RoleId]
  Status varchar(20) [default: 'Active']
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table OwnershipGroup {
  GroupId bigint [pk, increment]
  GroupName varchar(100) [not null]
  Status varchar(20) [default: 'Pending']
  Description text
  MemberCapacity int [note: 'Planned number of members in the group']
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table OwnershipShare {
  UserId bigint [ref: > Users.UserId, not null]
  GroupId bigint [ref: > OwnershipGroup.GroupId, not null]
  GroupRole varchar(50) [default: 'Member']
  OwnershipPercentage decimal(5,2) [not null, note: 'Must be > 0 and <= 100']
  JoinDate datetime [default: `now()`]
  DepositStatus varchar(20) [default: 'PENDING', note: 'PENDING, PAID, REFUNDED']
  UpdatedAt datetime [default: `now()`]

  indexes {
    (UserId, GroupId) [pk]
    GroupId [name: 'IX_OwnershipShare_GroupId']
  }
}

Table Vehicle {
  VehicleId bigint [pk, increment]
  Brand varchar(100)
  Model varchar(100)
  LicensePlate varchar(20)
  ChassisNumber varchar(30)
  QrCode varchar(255)
  VehicleValue decimal(15,2) [note: 'Value of the vehicle (VND)']
  GroupId bigint [ref: - OwnershipGroup.GroupId]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table VehicleImages {
  ImageId bigint [pk, increment]
  VehicleId bigint [ref: > Vehicle.VehicleId, not null]
  ImageUrl varchar(500) [not null]
  ImageType varchar(20) [not null, note: 'VEHICLE or LICENSE']
  ApprovalStatus varchar(20) [default: 'PENDING', note: 'PENDING, APPROVED, REJECTED']
  ApprovedBy bigint [ref: > Users.UserId]
  ApprovedAt datetime
  RejectionReason varchar(500)
  UploadedAt datetime [default: `now()`]
}

Table ContractTemplate {
  TemplateId bigint [pk, increment]
  TemplateName varchar(100) [not null]
  Description text
  HtmlTemplate text [not null, note: 'HTML template for contract generation']
  IsActive boolean [default: true]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table Contract {
  ContractId bigint [pk, increment]
  GroupId bigint [ref: - OwnershipGroup.GroupId, not null]
  TemplateId bigint [ref: > ContractTemplate.TemplateId, note: 'Template used for this contract']
  StartDate date
  EndDate date
  Terms text
  RequiredDepositAmount decimal(15,2) [note: 'Required deposit amount for joining the group']
  IsActive boolean [default: true]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
  
  // Contract Approval Fields (added after approval workflow implementation)
  ApprovalStatus varchar(20) [default: 'PENDING', note: 'PENDING, APPROVED, REJECTED']
  ApprovedBy bigint [ref: > Users.UserId, note: 'Staff/Admin who approved the contract']
  ApprovedAt datetime [note: 'When the contract was approved/rejected']
  RejectionReason varchar(500) [note: 'Reason for rejection if status is REJECTED']

  indexes {
    ApprovalStatus [name: 'IX_Contract_ApprovalStatus']
    ApprovedBy [name: 'IX_Contract_ApprovedBy']
  }
}

Table SharedFund {
  FundId bigint [pk, increment]
  GroupId bigint [ref: - OwnershipGroup.GroupId, not null]
  Balance decimal(15,2) [default: 0]
  TargetAmount decimal(15,2) [default: 0]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
  Version bigint [default: 0]

  indexes {
    GroupId [unique, name: 'UQ_SharedFund_Group']
  }
}

Table UsageBooking {
  BookingId bigint [pk, increment]
  UserId bigint [ref: > Users.UserId, not null]
  VehicleId bigint [ref: > Vehicle.VehicleId, not null]
  StartDateTime datetime [not null]
  EndDateTime datetime [not null]
  Status varchar(20) [default: 'Pending']
  TotalDuration int
  Priority int
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table Maintenance {
  MaintenanceId bigint [pk, increment]
  VehicleId bigint [ref: > Vehicle.VehicleId, not null]
  RequestedBy bigint [not null]
  ApprovedBy bigint [ref: > Users.UserId]
  RequestDate datetime [default: `now()`]
  ApprovalDate datetime
  NextDueDate date
  Description text
  EstimatedCost decimal(12,2)
  ActualCost decimal(12,2)
  MaintenanceStatus varchar(20) [default: 'Pending']
}

Table Notification {
  NotificationId bigint [pk, increment]
  UserId bigint [ref: > Users.UserId]
  Title varchar(255)
  Message text
  NotificationType varchar(50)
  IsRead boolean [default: false]
  IsDelivered boolean [default: false]
  CreatedAt datetime [default: `now()`]
}

Table Incident {
  IncidentId bigint [pk, increment]
  BookingId bigint [ref: > UsageBooking.BookingId, not null]
  IncidentType varchar(50) [note: 'BATTERY_FAILURE, ACCIDENT, TECHNICAL_ISSUE, DAMAGE']
  Description text
  EstimatedCost decimal(12,2)
  ActualCost decimal(12,2)
  Status varchar(20) [default: 'Reported']
  ImageUrls text [note: 'JSON array of image URLs']
  IncidentDate datetime [default: `now()`]
  ResolvedDate datetime
  ResolvedBy bigint [ref: > Users.UserId]
  Notes varchar(1000)
  CreatedAt datetime [default: `now()`]
}

Table VehicleCheck {
  Id bigint [pk, increment]
  BookingId bigint [ref: > UsageBooking.BookingId]
  CheckType varchar(20) [note: 'PRE_USE, POST_USE, REJECTION']
  Odometer int
  BatteryLevel decimal(5,2)
  Cleanliness varchar(20) [note: 'CLEAN, DIRTY, VERY_DIRTY']
  Notes text
  Issues text [note: 'JSON array of issues']
  Status varchar(20) [note: 'PASSED, REJECTED, PENDING']
  CreatedAt datetime [default: `now()`]
}

Table UserDocument {
  DocumentId bigint [pk, increment]
  UserId bigint [not null]
  DocumentType varchar(20) [note: 'CITIZEN_ID, DRIVER_LICENSE']
  Side varchar(10) [note: 'FRONT, BACK']
  ImageUrl varchar(500) [not null]
  Status varchar(20) [default: 'Pending']
  ReviewNote text
  ReviewedBy bigint [ref: > Users.UserId]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
}

Table Voting {
  VotingId bigint [pk, increment]
  GroupId bigint [ref: > OwnershipGroup.GroupId]
  Title varchar(255)
  Description text
  VotingType varchar(50) [note: 'BATTERY_UPGRADE, INSURANCE_CHANGE, SELL_VEHICLE, MAINTENANCE']
  Options text [note: 'JSON: ["Option 1", "Option 2", "Option 3"]']
  Results text [note: 'JSON: {"Option 1": 2, "Option 2": 1}']
  Deadline datetime
  Status varchar(20) [default: 'Active']
  CreatedBy bigint [ref: > Users.UserId]
  CreatedAt datetime [default: `now()`]
}

Table Dispute {
  DisputeId bigint [pk, increment]
  FundId bigint [ref: > SharedFund.FundId, not null]
  CreatedBy bigint
  DisputeType varchar(50) [note: 'FINANCIAL, USAGE, DECISION']
  RelatedEntityType varchar(50) [note: 'INCIDENT, PAYMENT, EXPENSE, VOTING']
  RelatedEntityId bigint
  Description text
  DisputedAmount decimal(12,2)
  Notes varchar(1000)
  Resolution text
  ResolutionAmount decimal(12,2)
  Status varchar(20) [default: 'Open']
  ResolvedBy bigint [ref: > Users.UserId]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]
  ResolvedAt datetime
}

Table Expense {
  ExpenseId bigint [pk, increment]
  FundId bigint [ref: > SharedFund.FundId]
  SourceType varchar(50) [note: 'MAINTENANCE, INCIDENT, VEHICLE_CHECK']
  SourceId bigint
  Description text
  Amount decimal(12,2) [not null]
  ExpenseDate datetime [default: `now()`]
}

Table Payment {
  PaymentId bigint [pk, increment]
  PayerUserId bigint [ref: > Users.UserId, not null, note: 'User who paid (initiator)']
  FundID bigint [ref: > SharedFund.FundId, not null]
  Amount decimal(12,2) [not null]
  PaymentDate datetime [default: `now()`]
  PaymentMethod varchar(50)
  Status varchar(20) [default: 'Pending']
  TransactionCode varchar(100)
  ProviderResponse text
  PaymentType varchar(20) [not null, note: 'CONTRIBUTION, PENALTY, MAINTENANCE_FEE, DEPOSIT']
  Version bigint [default: 0]

  // Personal payment support (money still goes to fund but tagged as personal)
  PaymentCategory varchar(20) [default: 'GROUP', note: 'GROUP or PERSONAL']
  ChargedUserId bigint [ref: > Users.UserId, note: 'User held personally responsible (required when PERSONAL)']
  SourceDisputeId bigint [ref: > Dispute.DisputeId, note: 'If originated from a dispute']
  PersonalReason text

  indexes {
    PaymentCategory [name: 'IX_Payment_Category']
    ChargedUserId [name: 'IX_Payment_ChargedUserId']
    SourceDisputeId [name: 'IX_Payment_SourceDisputeId']
  }

  note: 'Rule: when PaymentCategory = PERSONAL then ChargedUserId must be NOT NULL.'
}

Table FinancialReport {
  ReportId bigint [pk, increment]
  FundId bigint [ref: > SharedFund.FundId, not null]
  ReportMonth int
  ReportYear int
  TotalIncome decimal(15,2)
  TotalExpense decimal(15,2)
  GeneratedBy bigint [ref: > Users.UserId, not null]
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime [default: `now()`]

  indexes {
    FundId [name: 'IX_FinancialReport_FundId']
    GeneratedBy [name: 'IX_FinancialReport_GeneratedBy']
    (ReportYear, ReportMonth) [name: 'IX_FinancialReport_ReportYear_Month']
  }
}

Table OtpToken {
  TokenId bigint [pk, increment]
  Email varchar(100) [not null]
  OtpCode varchar(6) [not null]
  ExpiresAt datetime [not null]
  IsUsed boolean [default: false]
  CreatedAt datetime [default: `now()`]
}
// ===== Add-on: Dispute processing (no change to Dispute) =====

Table DisputeTicket {
  TicketId bigint [pk, increment]
  DisputeId bigint [not null, ref: > Dispute.DisputeId]

  Priority varchar(20) [not null, default: 'MEDIUM']
  AssignedTo bigint [ref: > Users.UserId]          // ⬅️ link tới Users.UserId
  OpenedAt datetime [not null, default: `now()`]
  DueFirstResponseAt datetime
  DueResolutionAt datetime
  ClosedAt datetime

  indexes {
    DisputeId [name: 'IX_DisputeTicket_DisputeId']
    AssignedTo [name: 'IX_DisputeTicket_AssignedTo'] // ⬅️ index cho truy vấn theo staff
    (DisputeId, ClosedAt) [name: 'IX_DisputeTicket_Open']
  }
}
Table DisputeEvent {
  EventId bigint [pk, increment]
  TicketId bigint [ref: > DisputeTicket.TicketId]

  ActorUserId bigint
  ActorRole varchar(20)                                  // USER/STAFF/SYSTEM
  EventType varchar(40) [not null]                       // CREATED/ATTACHMENT_ADDED/.../CLOSED
  OldValue varchar(200)
  NewValue varchar(200)
  Note text
  CreatedAt datetime [not null, default: `now()`]

  indexes {
    TicketId [name: 'IX_DisputeEvent_TicketId']
    EventType [name: 'IX_DisputeEvent_EventType']
  }
}

Table DisputeAttachment {
  AttachmentId bigint [pk, increment]
  DisputeId bigint [not null, ref: > Dispute.DisputeId]

  FileName varchar(255) [not null]
  MimeType varchar(100) [not null]
  SizeBytes bigint [not null]
  StorageUrl varchar(1000) [not null]                   // URL S3/Blob/Local
  Sha256 varchar(64)                                    // checksum (optional)
  ThumbnailUrl varchar(1000)
  MetaJson text                                         // EXIF/width/height/OCR...
  UploadedBy bigint [not null]                          // Users.UserId
  Visibility varchar(20) [not null, default: 'USER']    // USER/STAFF/INTERNAL
  Status varchar(20) [not null, default: 'ACTIVE']      // ACTIVE/SOFT_DELETED
  CreatedAt datetime [not null, default: `now()`]
  DeletedAt datetime

  indexes {
    DisputeId [name: 'IX_DisputeAttachment_DisputeId']
    UploadedBy [name: 'IX_DisputeAttachment_UploadedBy']
  }
}

// ===== Outcomes (kết quả xử lý) =====

Table Refund {
  RefundId bigint [pk, increment]
  DisputeId bigint [not null, ref: > Dispute.DisputeId]

  Amount decimal(15,2) [not null]
  Method varchar(30) [not null]                         // VNPAY/BANK/OTHER
  TxnRef varchar(100)                                   // mã giao dịch
  Status varchar(20) [not null, default: 'PENDING']     // PENDING/SUCCESS/FAILED
  CreatedAt datetime [not null, default: `now()`]
  SettledAt datetime
  Note text

  // VNPAY integration fields
  Provider varchar(20) [default: 'VNPAY']               // Payment gateway
  ProviderTxnRef varchar(100)                           // original VNPAY txn ref
  ProviderRefundRef varchar(100)                        // VNPAY refund txn ref
  ReasonCode varchar(20)                                // VNPAY response/err code (e.g., 00)
  Channel varchar(20)                                   // QR/CARD
  RawResponse text                                      // gateway JSON payload

  indexes {
    DisputeId [name: 'IX_Refund_DisputeId']
    Status [name: 'IX_Refund_Status']
  }
}
Table JournalEntry {
  EntryId bigint [pk, increment]
  DisputeId bigint [not null, ref: > Dispute.DisputeId]
  FundId bigint [not null, ref: > SharedFund.FundId]

  AccountCode varchar(50) [not null]
  Debit decimal(15,2) [not null, default: 0]
  Credit decimal(15,2) [not null, default: 0]
  Memo varchar(255)
  PostedAt datetime
  CreatedAt datetime [not null, default: `now()`]

  indexes {
    DisputeId [name: 'IX_Journal_DisputeId']
    FundId [name: 'IX_Journal_FundId']
  }
}
