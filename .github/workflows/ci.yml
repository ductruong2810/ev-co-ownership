name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  MAVEN_OPTS: "-Xmx1024m -XX:+UseG1GC"

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache Maven wrapper
      uses: actions/cache@v3
      with:
        path: ~/.m2/wrapper
        key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('**/.mvn/wrapper/maven-wrapper.jar') }}
        restore-keys: ${{ runner.os }}-maven-wrapper-
        
    - name: Run tests with Maven
      run: ./mvnw clean test -Dspring.profiles.active=test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: ./mvnw clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jar-artifact
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: jar-artifact
        
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'evshare'
        slot-name: 'Production'
        package: '*.jar'
